Parameters:
  HostName:
    Type: String
    Default: seed-find.underscore76.net

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: "index.html"
        ErrorDocument: "index.html"
      Tags:
        - Key: BucketType
          Value: Website
  
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebsiteBucket
      PolicyDocument:
        Statement:
          - Sid: CloudFrontOriginAccessIdentity
            Action: "s3:GetObject"
            Effect: Allow
            Resource:
              - !Join ["", [!GetAtt WebsiteBucket.Arn, "/*"]]
            Principal:
              AWS:
                - !Join [
                    " ",
                    [
                      "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity",
                      !Ref OriginAccessIdentity,
                    ],
                  ]

  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "For accessing the website bucket"
  
  WebsiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref HostName
        Origins:
          - Id: WebsiteOrigin
            DomainName: !GetAtt WebsiteBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: 
                !Sub "origin-access-identity/cloudfront/${OriginAccessIdentity}"
        DefaultCacheBehavior:
          TargetOriginId: WebsiteOrigin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: true
        Enabled: true
        DefaultRootObject: index.html
        ViewerCertificate:
          AcmCertificateArn: '{{resolve:ssm:/route53/hostedzone/certificate}}'
          SslSupportMethod: "sni-only"
        Comment: "CDN for S3-backed website"
        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: "/index.html"

  RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: '{{resolve:ssm:/route53/hostedzone/id}}'
      RecordSets:
        - Name: !Ref HostName
          Type: A
          AliasTarget:
            # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt WebsiteCDN.DomainName

Outputs:
  WebsiteBucketName:
    Value: !Ref WebsiteBucket
  DistributionId:
    Value: !Ref WebsiteCDN
  